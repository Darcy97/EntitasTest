//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public BrustModeListenerComponent brustModeListener { get { return (BrustModeListenerComponent)GetComponent(InputComponentsLookup.BrustModeListener); } }
    public bool hasBrustModeListener { get { return HasComponent(InputComponentsLookup.BrustModeListener); } }

    public void AddBrustModeListener(System.Collections.Generic.List<IBrustModeListener> newValue) {
        var index = InputComponentsLookup.BrustModeListener;
        var component = (BrustModeListenerComponent)CreateComponent(index, typeof(BrustModeListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceBrustModeListener(System.Collections.Generic.List<IBrustModeListener> newValue) {
        var index = InputComponentsLookup.BrustModeListener;
        var component = (BrustModeListenerComponent)CreateComponent(index, typeof(BrustModeListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveBrustModeListener() {
        RemoveComponent(InputComponentsLookup.BrustModeListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherBrustModeListener;

    public static Entitas.IMatcher<InputEntity> BrustModeListener {
        get {
            if (_matcherBrustModeListener == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.BrustModeListener);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherBrustModeListener = matcher;
            }

            return _matcherBrustModeListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public void AddBrustModeListener(IBrustModeListener value) {
        var listeners = hasBrustModeListener
            ? brustModeListener.value
            : new System.Collections.Generic.List<IBrustModeListener>();
        listeners.Add(value);
        ReplaceBrustModeListener(listeners);
    }

    public void RemoveBrustModeListener(IBrustModeListener value, bool removeComponentWhenEmpty = true) {
        var listeners = brustModeListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveBrustModeListener();
        } else {
            ReplaceBrustModeListener(listeners);
        }
    }
}
